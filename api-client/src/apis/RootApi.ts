/* tslint:disable */
/* eslint-disable */
/**
 * Mediva API
 * Specification of the Mediva API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@mediva.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

/**
 * RootApi - interface
 * 
 * @export
 * @interface RootApiInterface
 */
export interface RootApiInterface {
    /**
     * Root endpoint
     * @summary Root endpoint
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RootApiInterface
     */
    rootRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;

    /**
     * Root endpoint
     * Root endpoint
     */
    root(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;

}

/**
 * 
 */
export class RootApi extends runtime.BaseAPI implements RootApiInterface {

    /**
     * Root endpoint
     * Root endpoint
     */
    async rootRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Root endpoint
     * Root endpoint
     */
    async root(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.rootRaw(initOverrides);
        return await response.value();
    }

}
